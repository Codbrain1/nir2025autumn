name: Render PlantUML Diagrams in Wiki

on:
  push:
    branches:
      - main  # Триггер при пуше в основную ветку
  workflow_dispatch:  # Позволяет запускать вручную

jobs:
  render-plantuml-wiki:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}.wiki  # Клонируем Wiki-репозиторий
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Process PlantUML diagrams
        run: |
          mkdir -p diagrams
          counter=0
          for file in *.md; do
            if grep -q '```plantuml' "$file"; then
              while IFS= read -r diagram; do
                if [[ -n "$diagram" ]]; then
                  # Извлекаем код PlantUML
                  echo "$diagram" > temp.puml
                  # Кодируем для PlantUML Server
                  encoded=$(python3 -c "import urllib.parse, sys; print(urllib.parse.quote(sys.stdin.read()))" < temp.puml)
                  echo "http://www.plantuml.com/plantuml/svg/~h${encoded}" > "diagrams/diagram_${counter}.url"
                  # Обновляем Markdown
                  sed -i "/```plantuml/,/```/s|!\[Diagram\](.*)|![Diagram](http://www.plantuml.com/plantuml/svg/~h${encoded})|" "$file"
                  counter=$((counter + 1))
                fi
              done < <(awk '/```plantuml/{flag=1;next}/```/{flag=0}flag' "$file")
            fi
          done
      - name: Commit changes to Wiki
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add *.md diagrams/
          git commit -m "Update Wiki with PlantUML diagrams" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
