name: Render PlantUML Diagrams in Wiki

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  render-plantuml-wiki:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Wiki repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}.wiki
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: List Wiki files
        run: |
          echo "Listing files in Wiki repository:"
          ls -la *.md || echo "No .md files found"
      - name: Show file contents
        run: |
          echo "Contents of .md files:"
          for file in *.md; do
            if [ -f "$file" ]; then
              echo "File: $file"
              cat "$file"
              echo "----"
            fi
          done
      - name: Process PlantUML diagrams
        run: |
          mkdir -p diagrams
          counter=0
          for file in *.md; do
            if [ -f "$file" ] && grep -q '``` *plantuml' "$file"; then
              echo "Processing $file"
              while IFS= read -r diagram; do
                if [[ -n "$diagram" ]]; then
                  echo "Found PlantUML diagram in $file:"
                  echo "$diagram"
                  echo "$diagram" > temp.puml
                  encoded=$(python3 -c "import urllib.parse, sys; print(urllib.parse.quote(sys.stdin.read(), safe=''))" < temp.puml)
                  url="http://www.plantuml.com/plantuml/svg/~h${encoded}"
                  echo "Generated URL: $url" >> diagrams/urls.txt
                  # Проверяем наличие ![Diagram]()
                  if grep -A1 '``` *plantuml' "$file" | grep -q '!\[Diagram\]'; then
                    echo "Replacing existing ![Diagram] in $file"
                    sed -i "/\`\`\` *plantuml/,/\`\`\`/ {/\!\[Diagram\]/ s|!\[Diagram\].*|![Diagram]($url)|}" "$file"
                  else
                    echo "Appending ![Diagram] after plantuml block in $file"
                    sed -i "/\`\`\` *plantuml/,/\`\`\`/ {/\`\`\`/a \!\[Diagram\]($url)}" "$file"
                  fi
                  counter=$((counter + 1))
                fi
              done < <(awk '/``` *plantuml/{flag=1;next}/```/{flag=0}flag' "$file")
            else
              echo "No PlantUML blocks or file not found: $file"
            fi
          done
          echo "Processed $counter diagrams"
      - name: Show modified files
        run: |
          echo "Modified files:"
          git status
          echo "Contents of modified .md files:"
          for file in *.md; do
            if [ -f "$file" ]; then
              echo "File: $file"
              cat "$file"
              echo "----"
            fi
          done
      - name: Commit changes to Wiki
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add *.md diagrams/
          git commit -m "Update Wiki with PlantUML diagrams" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
